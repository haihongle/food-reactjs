{"ast":null,"code":"import{useEffect,useState}from'react';import{useOutletContext}from'react-router';import orderSerivces from'../../../../services/orderServices/OrderService';import ServiceMethods from'../../../../utils/ServiceMethods';import Toast from'../../../../components/toast-message/ToastMessage';import CustomTable from'../../../../components/custom-table/CustomTable';import CustomModalDetail from'../../../../components/custom-modal/CustomModalDetail';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function AllOrders(){const[allOrder,setAllOrder]=useState([]);const[detailData,setDetailData]=useState(null);const{filteredData}=useOutletContext();const sortOrders=order=>{let sortedOrders=[...order];if(filteredData.orderby){switch(filteredData.orderby){case'latest':sortedOrders.sort((a,b)=>{const dateA=new Date(a.createdAt).getTime();const dateB=new Date(b.createdAt).getTime();return dateB-dateA;});break;default:break;}}setAllOrder(sortedOrders);};useEffect(()=>{getNewOrder();},[filteredData]);const getNewOrder=async()=>{try{const response=await orderSerivces.getOrderList();if(response.success){if(filteredData){sortOrders(response.data);}else{setAllOrder(response.data);}}else{Toast.error(response.message);}}catch(error){Toast.error(error);}};useEffect(()=>{getNewOrder();},[]);const detailOrder=async id=>{const data=await ServiceMethods.detail(orderSerivces.detailOrder,id);setDetailData(data);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CustomModalDetail,{detailData:detailData,hiddenFields:[]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"text-center fw-bold\",children:\"All ORDERS\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsx(CustomTable,{data:allOrder,actions:{detail:detailOrder},hiddenFields:['id','updatedAt']})})]});}export default AllOrders;","map":{"version":3,"names":["useEffect","useState","useOutletContext","orderSerivces","ServiceMethods","Toast","CustomTable","CustomModalDetail","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","AllOrders","allOrder","setAllOrder","detailData","setDetailData","filteredData","sortOrders","order","sortedOrders","orderby","sort","a","b","dateA","Date","createdAt","getTime","dateB","getNewOrder","response","getOrderList","success","data","error","message","detailOrder","id","detail","children","hiddenFields","className","actions"],"sources":["C:/Users/ADMIN/Desktop/testproject/src/pages/cms/orders/all-orders/AllOrders.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useOutletContext } from 'react-router';\r\nimport orderSerivces from '../../../../services/orderServices/OrderService';\r\nimport ServiceMethods from '../../../../utils/ServiceMethods';\r\nimport Toast from '../../../../components/toast-message/ToastMessage';\r\nimport CustomTable from '../../../../components/custom-table/CustomTable';\r\nimport CustomModalDetail from '../../../../components/custom-modal/CustomModalDetail';\r\n\r\nfunction AllOrders() {\r\n\tconst [allOrder, setAllOrder] = useState([]);\r\n\tconst [detailData, setDetailData] = useState(null);\r\n\tconst { filteredData } = useOutletContext();\r\n\r\n\tconst sortOrders = (order) => {\r\n\t\tlet sortedOrders = [...order];\r\n\t\tif (filteredData.orderby) {\r\n\t\t\tswitch (filteredData.orderby) {\r\n\t\t\t\tcase 'latest':\r\n\t\t\t\t\tsortedOrders.sort((a, b) => {\r\n\t\t\t\t\t\tconst dateA = new Date(a.createdAt).getTime();\r\n\t\t\t\t\t\tconst dateB = new Date(b.createdAt).getTime();\r\n\t\t\t\t\t\treturn dateB - dateA;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetAllOrder(sortedOrders);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tgetNewOrder();\r\n\t}, [filteredData]);\r\n\r\n\tconst getNewOrder = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await orderSerivces.getOrderList();\r\n\t\t\tif (response.success) {\r\n\t\t\t\tif (filteredData) {\r\n\t\t\t\t\tsortOrders(response.data);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetAllOrder(response.data);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tToast.error(response.message);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tToast.error(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetNewOrder();\r\n\t}, []);\r\n\r\n\tconst detailOrder = async (id) => {\r\n\t\tconst data = await ServiceMethods.detail(orderSerivces.detailOrder, id);\r\n\t\tsetDetailData(data);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CustomModalDetail detailData={detailData} hiddenFields={[]} />\r\n\t\t\t<div className=\"card-header\">\r\n\t\t\t\t<h2 className=\"text-center fw-bold\">All ORDERS</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<CustomTable\r\n\t\t\t\t\tdata={allOrder}\r\n\t\t\t\t\tactions={{ detail: detailOrder }}\r\n\t\t\t\t\thiddenFields={['id', 'updatedAt']}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default AllOrders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}