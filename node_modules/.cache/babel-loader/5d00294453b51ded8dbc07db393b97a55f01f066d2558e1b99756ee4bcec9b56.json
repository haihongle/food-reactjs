{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\testproject\\\\src\\\\pages\\\\cms\\\\customer\\\\customer-list\\\\CustomerList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport ServiceMethods from '../../../../utils/ServiceMethods';\nimport customerServices from '../../../../services/customerServices/CustomerServices';\nimport CustomTable from '../../../../components/custom-table/CustomTable';\nimport CardHeader from '../../../../components/card-header/CardHeader';\nimport CustomModalDetail from '../../../../components/custom-modal/CustomModalDetail';\nimport CustomModalForm from '../../../../components/custom-modal/CustomModalForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CustomerList() {\n  _s();\n  const [customerList, setCustomerList] = useState([]);\n  const [pageCount, setPageCount] = useState(0);\n  const [detailData, setDetailData] = useState(null);\n  const [pagination, setPagination] = useState({\n    page: 0,\n    size: 10\n  });\n  const user = JSON.parse(localStorage.getItem('user')); // Lấy thông tin người dùng từ localStorage\n  const navigate = useNavigate(); // Để chuyển hướng khi không có quyền\n\n  // Kiểm tra quyền truy cập\n  useEffect(() => {\n    if (!user || user.role !== 'USER') {\n      alert('You do not have permission to access this page.');\n      navigate('/'); // Chuyển hướng về trang chính nếu không có quyền\n    }\n  }, [user, navigate]);\n\n  // Cập nhật trang khi phân trang\n  const paginate = ({\n    selected\n  }) => {\n    setPagination({\n      page: selected,\n      size: 10\n    });\n  };\n\n  // Lấy danh sách khách hàng\n  useEffect(() => {\n    getCustomerList();\n  }, [pagination]);\n  const getCustomerList = async () => {\n    await ServiceMethods.get(customerServices.getList, pagination, data => {\n      setCustomerList(data);\n      setPageCount(Math.ceil(data.length / pagination.size));\n    });\n  };\n\n  // Thêm khách hàng mới\n  const addCustomer = async values => {\n    await ServiceMethods.add(customerServices.addNew, values, getCustomerList);\n  };\n\n  // Xem chi tiết khách hàng\n  const detailCustomer = async id => {\n    const data = await ServiceMethods.detail(customerServices.getDetail, id);\n    setDetailData(data);\n  };\n\n  // Cập nhật thông tin khách hàng\n  const updateCustomer = async (oldData, updatedData) => {\n    const onSuccess = async menuId => {\n      await detailCustomer(menuId);\n      await getCustomerList();\n    };\n    updatedData.updatedBy = (user === null || user === void 0 ? void 0 : user.username) || null;\n    await ServiceMethods.update(customerServices.updateCustomer, oldData.customerId, updatedData, onSuccess);\n  };\n\n  // Xóa khách hàng\n  const deleteCustomer = async id => {\n    await ServiceMethods.add(customerServices.deleteCustomer, id, getCustomerList);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CustomModalForm, {\n      title: 'Add new customer',\n      properties: [{\n        label: 'Full name',\n        field: 'fullname',\n        type: 'text',\n        validation: Yup.string().required('Full name is required'),\n        className: 'col-md-6'\n      }, {\n        label: 'Email',\n        field: 'email',\n        type: 'text',\n        validation: Yup.string().email('Invalid email format').required('Email is required'),\n        className: 'col-md-6'\n      }, {\n        label: 'Phone number',\n        field: 'phonenumber',\n        type: 'number',\n        validation: Yup.string().matches(/^(?:\\d{10}|\\d{11})$/, 'Phone number must be 10 or 11 digits').required('Phone number is required'),\n        className: 'col-md-6'\n      }, {\n        label: 'Age',\n        field: 'age',\n        type: 'number',\n        validation: Yup.number().positive('Age must be positive').required('Age is required'),\n        className: 'col-md-6'\n      }],\n      modalID: \"customerModal\",\n      submitFunction: values => addCustomer(values)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CustomModalDetail, {\n      detailData: detailData,\n      actions: {\n        update: updateCustomer\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n      pageCount: pageCount,\n      paginateFunction: paginate,\n      modalID: '#customerModal',\n      buttonName: 'Add new customer'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(CustomTable, {\n        data: customerList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(CustomerList, \"C0t2S+TZ7RKWUNpVnwMogelfMfE=\", false, function () {\n  return [useNavigate];\n});\n_c = CustomerList;\nexport default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["useState","useEffect","useNavigate","Yup","ServiceMethods","customerServices","CustomTable","CardHeader","CustomModalDetail","CustomModalForm","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerList","_s","customerList","setCustomerList","pageCount","setPageCount","detailData","setDetailData","pagination","setPagination","page","size","user","JSON","parse","localStorage","getItem","navigate","role","alert","paginate","selected","getCustomerList","get","getList","data","Math","ceil","length","addCustomer","values","add","addNew","detailCustomer","id","detail","getDetail","updateCustomer","oldData","updatedData","onSuccess","menuId","updatedBy","username","update","customerId","deleteCustomer","children","title","properties","label","field","type","validation","string","required","className","email","matches","number","positive","modalID","submitFunction","fileName","_jsxFileName","lineNumber","columnNumber","actions","paginateFunction","buttonName","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/testproject/src/pages/cms/customer/customer-list/CustomerList.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport ServiceMethods from '../../../../utils/ServiceMethods';\r\nimport customerServices from '../../../../services/customerServices/CustomerServices';\r\nimport CustomTable from '../../../../components/custom-table/CustomTable';\r\nimport CardHeader from '../../../../components/card-header/CardHeader';\r\nimport CustomModalDetail from '../../../../components/custom-modal/CustomModalDetail';\r\nimport CustomModalForm from '../../../../components/custom-modal/CustomModalForm';\r\n\r\nfunction CustomerList() {\r\n\tconst [customerList, setCustomerList] = useState([]);\r\n\tconst [pageCount, setPageCount] = useState(0);\r\n\tconst [detailData, setDetailData] = useState(null);\r\n\tconst [pagination, setPagination] = useState({\r\n\t\tpage: 0,\r\n\t\tsize: 10,\r\n\t});\r\n\tconst user = JSON.parse(localStorage.getItem('user')); // Lấy thông tin người dùng từ localStorage\r\n\tconst navigate = useNavigate(); // Để chuyển hướng khi không có quyền\r\n\r\n\t// Kiểm tra quyền truy cập\r\n\tuseEffect(() => {\r\n\t\tif (!user || user.role !== 'USER') {\r\n\t\t\talert('You do not have permission to access this page.');\r\n\t\t\tnavigate('/'); // Chuyển hướng về trang chính nếu không có quyền\r\n\t\t}\r\n\t}, [user, navigate]);\r\n\r\n\t// Cập nhật trang khi phân trang\r\n\tconst paginate = ({ selected }) => {\r\n\t\tsetPagination({\r\n\t\t\tpage: selected,\r\n\t\t\tsize: 10,\r\n\t\t});\r\n\t};\r\n\r\n\t// Lấy danh sách khách hàng\r\n\tuseEffect(() => {\r\n\t\tgetCustomerList();\r\n\t}, [pagination]);\r\n\r\n\tconst getCustomerList = async () => {\r\n\t\tawait ServiceMethods.get(customerServices.getList, pagination, (data) => {\r\n\t\t\tsetCustomerList(data);\r\n\t\t\tsetPageCount(Math.ceil(data.length / pagination.size));\r\n\t\t});\r\n\t};\r\n\r\n\t// Thêm khách hàng mới\r\n\tconst addCustomer = async (values) => {\r\n\t\tawait ServiceMethods.add(customerServices.addNew, values, getCustomerList);\r\n\t};\r\n\r\n\t// Xem chi tiết khách hàng\r\n\tconst detailCustomer = async (id) => {\r\n\t\tconst data = await ServiceMethods.detail(customerServices.getDetail, id);\r\n\t\tsetDetailData(data);\r\n\t};\r\n\r\n\t// Cập nhật thông tin khách hàng\r\n\tconst updateCustomer = async (oldData, updatedData) => {\r\n\t\tconst onSuccess = async (menuId) => {\r\n\t\t\tawait detailCustomer(menuId);\r\n\t\t\tawait getCustomerList();\r\n\t\t};\r\n\t\tupdatedData.updatedBy = user?.username || null;\r\n\t\tawait ServiceMethods.update(\r\n\t\t\tcustomerServices.updateCustomer,\r\n\t\t\toldData.customerId,\r\n\t\t\tupdatedData,\r\n\t\t\tonSuccess\r\n\t\t);\r\n\t};\r\n\r\n\t// Xóa khách hàng\r\n\tconst deleteCustomer = async (id) => {\r\n\t\tawait ServiceMethods.add(customerServices.deleteCustomer, id, getCustomerList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CustomModalForm\r\n\t\t\t\ttitle={'Add new customer'}\r\n\t\t\t\tproperties={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Full name',\r\n\t\t\t\t\t\tfield: 'fullname',\r\n\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\tvalidation: Yup.string().required('Full name is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Email',\r\n\t\t\t\t\t\tfield: 'email',\r\n\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\tvalidation: Yup.string().email('Invalid email format').required('Email is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Phone number',\r\n\t\t\t\t\t\tfield: 'phonenumber',\r\n\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\tvalidation: Yup.string()\r\n\t\t\t\t\t\t\t.matches(/^(?:\\d{10}|\\d{11})$/, 'Phone number must be 10 or 11 digits')\r\n\t\t\t\t\t\t\t.required('Phone number is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Age',\r\n\t\t\t\t\t\tfield: 'age',\r\n\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\tvalidation: Yup.number().positive('Age must be positive').required('Age is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\tmodalID=\"customerModal\"\r\n\t\t\t\tsubmitFunction={(values) => addCustomer(values)}\r\n\t\t\t/>\r\n\t\t\t<CustomModalDetail detailData={detailData} actions={{ update: updateCustomer }} />\r\n\t\t\t<CardHeader\r\n\t\t\t\tpageCount={pageCount}\r\n\t\t\t\tpaginateFunction={paginate}\r\n\t\t\t\tmodalID={'#customerModal'}\r\n\t\t\t\tbuttonName={'Add new customer'}\r\n\t\t\t/>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<CustomTable data={customerList} />\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default CustomerList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}