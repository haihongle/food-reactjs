{"ast":null,"code":"import moment from 'moment';\nconst calculateOrderTime = isoString => {\n  const futureDate = moment(isoString);\n  const now = moment();\n  if (futureDate.clone().add(30, 'minutes').diff(now) < 0) {\n    return 'danger';\n  }\n  if (futureDate.clone().add(15, 'minutes').diff(now) < 0) {\n    return 'warning';\n  }\n  return 'fine';\n};\nconst calculateInventoryTime = (isoString, shelfLife, warningThreshold = 3) => {\n  const futureDate = moment(isoString);\n  const now = moment();\n  const expirationDate = futureDate.clone().add(shelfLife, 'days');\n  console.log(futureDate, expirationDate);\n  if (expirationDate.diff(now) < 0) {\n    return 'danger';\n  }\n  if (expirationDate.diff(now) <= warningThreshold * 24 * 60 * 60 * 1000) {\n    return 'warning';\n  }\n  return 'fine';\n};\nconst calculateTime = {\n  calculateOrderTime,\n  calculateInventoryTime\n};\nexport default calculateTime;","map":{"version":3,"names":["moment","calculateOrderTime","isoString","futureDate","now","clone","add","diff","calculateInventoryTime","shelfLife","warningThreshold","expirationDate","console","log","calculateTime"],"sources":["C:/Users/ADMIN/Desktop/testproject/src/utils/CaculateTime.js"],"sourcesContent":["import moment from 'moment';\r\n\r\nconst calculateOrderTime = (isoString) => {\r\n\tconst futureDate = moment(isoString);\r\n\tconst now = moment();\r\n\r\n\tif (futureDate.clone().add(30, 'minutes').diff(now) < 0) {\r\n\t\treturn 'danger';\r\n\t}\r\n\tif (futureDate.clone().add(15, 'minutes').diff(now) < 0) {\r\n\t\treturn 'warning';\r\n\t}\r\n\treturn 'fine';\r\n};\r\n\r\nconst calculateInventoryTime = (isoString, shelfLife, warningThreshold = 3) => {\r\n\tconst futureDate = moment(isoString);\r\n\tconst now = moment();\r\n\tconst expirationDate = futureDate.clone().add(shelfLife, 'days');\r\n\tconsole.log(futureDate, expirationDate);\r\n\r\n\tif (expirationDate.diff(now) < 0) {\r\n\t\treturn 'danger';\r\n\t}\r\n\tif (expirationDate.diff(now) <= warningThreshold * 24 * 60 * 60 * 1000) {\r\n\t\treturn 'warning';\r\n\t}\r\n\treturn 'fine';\r\n};\r\n\r\nconst calculateTime = {\r\n\tcalculateOrderTime,\r\n\tcalculateInventoryTime,\r\n};\r\n\r\nexport default calculateTime;\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAE3B,MAAMC,kBAAkB,GAAIC,SAAS,IAAK;EACzC,MAAMC,UAAU,GAAGH,MAAM,CAACE,SAAS,CAAC;EACpC,MAAME,GAAG,GAAGJ,MAAM,CAAC,CAAC;EAEpB,IAAIG,UAAU,CAACE,KAAK,CAAC,CAAC,CAACC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,CAACC,IAAI,CAACH,GAAG,CAAC,GAAG,CAAC,EAAE;IACxD,OAAO,QAAQ;EAChB;EACA,IAAID,UAAU,CAACE,KAAK,CAAC,CAAC,CAACC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,CAACC,IAAI,CAACH,GAAG,CAAC,GAAG,CAAC,EAAE;IACxD,OAAO,SAAS;EACjB;EACA,OAAO,MAAM;AACd,CAAC;AAED,MAAMI,sBAAsB,GAAGA,CAACN,SAAS,EAAEO,SAAS,EAAEC,gBAAgB,GAAG,CAAC,KAAK;EAC9E,MAAMP,UAAU,GAAGH,MAAM,CAACE,SAAS,CAAC;EACpC,MAAME,GAAG,GAAGJ,MAAM,CAAC,CAAC;EACpB,MAAMW,cAAc,GAAGR,UAAU,CAACE,KAAK,CAAC,CAAC,CAACC,GAAG,CAACG,SAAS,EAAE,MAAM,CAAC;EAChEG,OAAO,CAACC,GAAG,CAACV,UAAU,EAAEQ,cAAc,CAAC;EAEvC,IAAIA,cAAc,CAACJ,IAAI,CAACH,GAAG,CAAC,GAAG,CAAC,EAAE;IACjC,OAAO,QAAQ;EAChB;EACA,IAAIO,cAAc,CAACJ,IAAI,CAACH,GAAG,CAAC,IAAIM,gBAAgB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE;IACvE,OAAO,SAAS;EACjB;EACA,OAAO,MAAM;AACd,CAAC;AAED,MAAMI,aAAa,GAAG;EACrBb,kBAAkB;EAClBO;AACD,CAAC;AAED,eAAeM,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}