{"ast":null,"code":"import{useState,useEffect}from'react';import MaterialService from'../../../../services/warehouseServices/MaterialService';import ServiceMethods from'../../../../utils/ServiceMethods';import*as Yup from'yup';import CustomTable from'../../../../components/custom-table/CustomTable';import CardHeader from'../../../../components/card-header/CardHeader';import CustomModalDetail from'../../../../components/custom-modal/CustomModalDetail';import CustomModalForm from'../../../../components/custom-modal/CustomModalForm';import OrderService from\"../../../../services/orderServices/OrderService\";import Toast from\"../../../../components/toast-message/ToastMessage\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Material(){const[dataMaterials,setDataMaterials]=useState([]);const[pageCount,setPageCount]=useState(null);const[detailData,setDetailData]=useState(null);const user=JSON.parse(localStorage.getItem('user'));const[pagination,setPagination]=useState({page:0,size:10});const paginate=_ref=>{let{selected}=_ref;setPagination({page:selected,size:10});};useEffect(()=>{getMaterials();},[pagination]);const getMaterials=async phantrang=>{// await ServiceMethods.get(MaterialService.getMaterials, pagination, (data) => {\n// \tsetDataMaterials(data);\n// \tconsole.log(data)\n// \t// setPageCount(data.metaData.totalPage);\n// });\ntry{const response=await MaterialService.getMaterials(pagination);if(response.success){setDataMaterials(response.data);setPageCount(response.metaData.totalPage);}else{Toast.error(response.message);}}catch(error){Toast.error(error);}};const addMaterials=async values=>{await ServiceMethods.add(MaterialService.addMaterials,values,getMaterials);};const detailMaterial=async id=>{const data=await ServiceMethods.detail(MaterialService.detailMaterial,id);setDetailData(data);};const updateMaterial=async updatedData=>{const{id,name,code,shelfLife,unitType,description}=updatedData;const requestUpdatedData={name:name,code:code,shelfLife:shelfLife,unitType:unitType,description:description};await ServiceMethods.update(MaterialService.updateMaterials,id,requestUpdatedData,getMaterials);};const deleteMaterial=async id=>{await ServiceMethods.detail(MaterialService.deleteMaterials,id,getMaterials);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CustomModalForm,{title:'Add new material',modalID:\"addMaterialModal\",properties:[{label:'Name',field:'name',type:'text',validation:Yup.string().required('Name is required'),className:'col-md-6'},{label:'Code',field:'code',type:'text',validation:Yup.string().required('Code is required'),className:'col-md-6'},{label:'ShelfLife',field:'shelfLife',type:'number',validation:Yup.number().required('Shelf Life is required').min(0,'Shelf Life must be a positive number'),className:'col-md-6'},{label:'Unit type',field:'unitType',type:'select',options:[{label:'Piece',value:'PIECE'},{label:'Kilogram',value:'KILOGRAM'},{label:'Gram',value:'GRAM'},{label:'Pair',value:'PAIR'}],validation:Yup.string().required('Unit Type is required'),className:'col-md-6'},{label:'Description',field:'description',type:'text-area',className:'col-md-12'}],submitFunction:values=>addMaterials(values)}),/*#__PURE__*/_jsx(CustomModalDetail,{detailData:detailData,actions:{update:updateMaterial},hiddenFields:['id']}),/*#__PURE__*/_jsx(CardHeader,{pageCount:pageCount,paginateFunction:paginate,modalID:'#addMaterialModal',buttonName:'Add material'}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsx(CustomTable,{data:dataMaterials,actions:{detail:detailMaterial,update:updateMaterial,delete:deleteMaterial},hiddenFields:['id','createdBy','updatedBy','updatedAt']})})]});}export default Material;","map":{"version":3,"names":["useState","useEffect","MaterialService","ServiceMethods","Yup","CustomTable","CardHeader","CustomModalDetail","CustomModalForm","OrderService","Toast","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Material","dataMaterials","setDataMaterials","pageCount","setPageCount","detailData","setDetailData","user","JSON","parse","localStorage","getItem","pagination","setPagination","page","size","paginate","_ref","selected","getMaterials","phantrang","response","success","data","metaData","totalPage","error","message","addMaterials","values","add","detailMaterial","id","detail","updateMaterial","updatedData","name","code","shelfLife","unitType","description","requestUpdatedData","update","updateMaterials","deleteMaterial","deleteMaterials","children","title","modalID","properties","label","field","type","validation","string","required","className","number","min","options","value","submitFunction","actions","hiddenFields","paginateFunction","buttonName","delete"],"sources":["E:/project-exam/eProject---SEM-2/src/pages/cms/warehouse/materials/Material.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport MaterialService from '../../../../services/warehouseServices/MaterialService';\r\nimport ServiceMethods from '../../../../utils/ServiceMethods';\r\nimport * as Yup from 'yup';\r\nimport CustomTable from '../../../../components/custom-table/CustomTable';\r\nimport CardHeader from '../../../../components/card-header/CardHeader';\r\nimport CustomModalDetail from '../../../../components/custom-modal/CustomModalDetail';\r\nimport CustomModalForm from '../../../../components/custom-modal/CustomModalForm';\r\nimport OrderService from \"../../../../services/orderServices/OrderService\";\r\nimport Toast from \"../../../../components/toast-message/ToastMessage\";\r\n\r\nfunction Material() {\r\n\tconst [dataMaterials, setDataMaterials] = useState([]);\r\n\tconst [pageCount, setPageCount] = useState(null);\r\n\tconst [detailData, setDetailData] = useState(null);\r\n\tconst user = JSON.parse(localStorage.getItem('user'));\r\n\tconst [pagination, setPagination] = useState({\r\n\t\tpage: 0,\r\n\t\tsize: 10,\r\n\t});\r\n\r\n\tconst paginate = ({ selected }) => {\r\n\t\tsetPagination({\r\n\t\t\tpage: selected,\r\n\t\t\tsize: 10,\r\n\t\t});\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tgetMaterials();\r\n\t}, [pagination]);\r\n\r\n\tconst getMaterials = async (phantrang) => {\r\n\t\t// await ServiceMethods.get(MaterialService.getMaterials, pagination, (data) => {\r\n\t\t// \tsetDataMaterials(data);\r\n\t\t// \tconsole.log(data)\r\n\t\t// \t// setPageCount(data.metaData.totalPage);\r\n\t\t// });\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await MaterialService.getMaterials(pagination);\r\n\t\t\tif (response.success) {\r\n\t\t\t\tsetDataMaterials(response.data);\r\n\t\t\t\tsetPageCount(response.metaData.totalPage);\r\n\t\t\t} else {\r\n\t\t\t\tToast.error(response.message);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tToast.error(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst addMaterials = async (values) => {\r\n\t\tawait ServiceMethods.add(MaterialService.addMaterials, values, getMaterials);\r\n\t};\r\n\r\n\tconst detailMaterial = async (id) => {\r\n\t\tconst data = await ServiceMethods.detail(MaterialService.detailMaterial, id);\r\n\t\tsetDetailData(data);\r\n\t};\r\n\r\n\tconst updateMaterial = async (updatedData) => {\r\n\t\tconst { id, name, code, shelfLife, unitType, description } = updatedData;\r\n\t\tconst requestUpdatedData = {\r\n\t\t\tname: name,\r\n\t\t\tcode: code,\r\n\t\t\tshelfLife: shelfLife,\r\n\t\t\tunitType: unitType,\r\n\t\t\tdescription: description,\r\n\t\t};\r\n\t\tawait ServiceMethods.update(\r\n\t\t\tMaterialService.updateMaterials,\r\n\t\t\tid,\r\n\t\t\trequestUpdatedData,\r\n\t\t\tgetMaterials\r\n\t\t);\r\n\t};\r\n\r\n\tconst deleteMaterial = async (id) => {\r\n\t\tawait ServiceMethods.detail(MaterialService.deleteMaterials, id, getMaterials);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CustomModalForm\r\n\t\t\t\ttitle={'Add new material'}\r\n\t\t\t\tmodalID=\"addMaterialModal\"\r\n\t\t\t\tproperties={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Name',\r\n\t\t\t\t\t\tfield: 'name',\r\n\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\tvalidation: Yup.string().required('Name is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Code',\r\n\t\t\t\t\t\tfield: 'code',\r\n\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\tvalidation: Yup.string().required('Code is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'ShelfLife',\r\n\t\t\t\t\t\tfield: 'shelfLife',\r\n\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\tvalidation: Yup.number()\r\n\t\t\t\t\t\t\t.required('Shelf Life is required')\r\n\t\t\t\t\t\t\t.min(0, 'Shelf Life must be a positive number'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Unit type',\r\n\t\t\t\t\t\tfield: 'unitType',\r\n\t\t\t\t\t\ttype: 'select',\r\n\t\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: 'Piece',\r\n\t\t\t\t\t\t\t\tvalue: 'PIECE',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: 'Kilogram',\r\n\t\t\t\t\t\t\t\tvalue: 'KILOGRAM',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: 'Gram',\r\n\t\t\t\t\t\t\t\tvalue: 'GRAM',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: 'Pair',\r\n\t\t\t\t\t\t\t\tvalue: 'PAIR',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tvalidation: Yup.string().required('Unit Type is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Description',\r\n\t\t\t\t\t\tfield: 'description',\r\n\t\t\t\t\t\ttype: 'text-area',\r\n\t\t\t\t\t\tclassName: 'col-md-12',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\tsubmitFunction={(values) => addMaterials(values)}\r\n\t\t\t/>\r\n\t\t\t<CustomModalDetail\r\n\t\t\t\tdetailData={detailData}\r\n\t\t\t\tactions={{ update: updateMaterial }}\r\n\t\t\t\thiddenFields={['id']}\r\n\t\t\t/>\r\n\t\t\t<CardHeader\r\n\t\t\t\tpageCount={pageCount}\r\n\t\t\t\tpaginateFunction={paginate}\r\n\t\t\t\tmodalID={'#addMaterialModal'}\r\n\t\t\t\tbuttonName={'Add material'}\r\n\t\t\t/>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<CustomTable\r\n\t\t\t\t\tdata={dataMaterials}\r\n\t\t\t\t\tactions={{\r\n\t\t\t\t\t\tdetail: detailMaterial,\r\n\t\t\t\t\t\tupdate: updateMaterial,\r\n\t\t\t\t\t\tdelete: deleteMaterial,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\thiddenFields={['id', 'createdBy', 'updatedBy', 'updatedAt']}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Material;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}