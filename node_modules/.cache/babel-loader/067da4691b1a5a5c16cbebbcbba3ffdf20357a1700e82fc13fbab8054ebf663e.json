{"ast":null,"code":"import moment from 'moment';\nconst findDateStrings = data => {\n  const dateKeys = [];\n  for (const key in data) {\n    if (data.hasOwnProperty(key)) {\n      const value = data[key];\n      if (typeof value === 'string') {\n        const isValidISO = moment(value, moment.ISO_8601, true).isValid();\n        if (isValidISO) {\n          dateKeys.push(key);\n        }\n      }\n    }\n  }\n  return dateKeys;\n};\nconst handleDatetime = dataObject => {\n  const formattedData = {\n    ...dataObject\n  };\n  const dateKeys = findDateStrings(dataObject);\n  dateKeys.forEach(key => {\n    const dateValue = dataObject[key];\n    const momentDate = moment(dateValue, moment.ISO_8601, true);\n    if (momentDate.isValid()) {\n      if (momentDate.format('YYYY-MM-DD') === '0000-01-01') {\n        formattedData[key] = momentDate.format('HH:mm');\n      } else if (momentDate.format('HH:mm:ss') !== '00:00:00') {\n        formattedData[key] = momentDate.format('DD/MM/YYYY - HH:mm');\n      } else {\n        formattedData[key] = momentDate.format('DD/MM/YYYY');\n      }\n    }\n  });\n  return formattedData;\n};\nexport default handleDatetime;","map":{"version":3,"names":["moment","findDateStrings","data","dateKeys","key","hasOwnProperty","value","isValidISO","ISO_8601","isValid","push","handleDatetime","dataObject","formattedData","forEach","dateValue","momentDate","format"],"sources":["E:/file-code-and-document/study programing/Project FPT Aptech/đồ án kỳ 2/eProject---SEM-2/src/utils/HandleDatetime.js"],"sourcesContent":["import moment from 'moment';\r\n\r\nconst findDateStrings = (data) => {\r\n\tconst dateKeys = [];\r\n\tfor (const key in data) {\r\n\t\tif (data.hasOwnProperty(key)) {\r\n\t\t\tconst value = data[key];\r\n\t\t\tif (typeof value === 'string') {\r\n\t\t\t\tconst isValidISO = moment(value, moment.ISO_8601, true).isValid();\r\n\t\t\t\tif (isValidISO) {\r\n\t\t\t\t\tdateKeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn dateKeys;\r\n};\r\n\r\nconst handleDatetime = (dataObject) => {\r\n\tconst formattedData = { ...dataObject };\r\n\tconst dateKeys = findDateStrings(dataObject);\r\n\r\n\tdateKeys.forEach((key) => {\r\n\t\tconst dateValue = dataObject[key];\r\n\t\tconst momentDate = moment(dateValue, moment.ISO_8601, true);\r\n\r\n\t\tif (momentDate.isValid()) {\r\n\t\t\tif (momentDate.format('YYYY-MM-DD') === '0000-01-01') {\r\n\t\t\t\tformattedData[key] = momentDate.format('HH:mm');\r\n\t\t\t} else if (momentDate.format('HH:mm:ss') !== '00:00:00') {\r\n\t\t\t\tformattedData[key] = momentDate.format('DD/MM/YYYY - HH:mm');\r\n\t\t\t} else {\r\n\t\t\t\tformattedData[key] = momentDate.format('DD/MM/YYYY');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn formattedData;\r\n};\r\n\r\n\r\nexport default handleDatetime;\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAE3B,MAAMC,eAAe,GAAIC,IAAI,IAAK;EACjC,MAAMC,QAAQ,GAAG,EAAE;EACnB,KAAK,MAAMC,GAAG,IAAIF,IAAI,EAAE;IACvB,IAAIA,IAAI,CAACG,cAAc,CAACD,GAAG,CAAC,EAAE;MAC7B,MAAME,KAAK,GAAGJ,IAAI,CAACE,GAAG,CAAC;MACvB,IAAI,OAAOE,KAAK,KAAK,QAAQ,EAAE;QAC9B,MAAMC,UAAU,GAAGP,MAAM,CAACM,KAAK,EAAEN,MAAM,CAACQ,QAAQ,EAAE,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC;QACjE,IAAIF,UAAU,EAAE;UACfJ,QAAQ,CAACO,IAAI,CAACN,GAAG,CAAC;QACnB;MACD;IACD;EACD;EACA,OAAOD,QAAQ;AAChB,CAAC;AAED,MAAMQ,cAAc,GAAIC,UAAU,IAAK;EACtC,MAAMC,aAAa,GAAG;IAAE,GAAGD;EAAW,CAAC;EACvC,MAAMT,QAAQ,GAAGF,eAAe,CAACW,UAAU,CAAC;EAE5CT,QAAQ,CAACW,OAAO,CAAEV,GAAG,IAAK;IACzB,MAAMW,SAAS,GAAGH,UAAU,CAACR,GAAG,CAAC;IACjC,MAAMY,UAAU,GAAGhB,MAAM,CAACe,SAAS,EAAEf,MAAM,CAACQ,QAAQ,EAAE,IAAI,CAAC;IAE3D,IAAIQ,UAAU,CAACP,OAAO,CAAC,CAAC,EAAE;MACzB,IAAIO,UAAU,CAACC,MAAM,CAAC,YAAY,CAAC,KAAK,YAAY,EAAE;QACrDJ,aAAa,CAACT,GAAG,CAAC,GAAGY,UAAU,CAACC,MAAM,CAAC,OAAO,CAAC;MAChD,CAAC,MAAM,IAAID,UAAU,CAACC,MAAM,CAAC,UAAU,CAAC,KAAK,UAAU,EAAE;QACxDJ,aAAa,CAACT,GAAG,CAAC,GAAGY,UAAU,CAACC,MAAM,CAAC,oBAAoB,CAAC;MAC7D,CAAC,MAAM;QACNJ,aAAa,CAACT,GAAG,CAAC,GAAGY,UAAU,CAACC,MAAM,CAAC,YAAY,CAAC;MACrD;IACD;EACD,CAAC,CAAC;EAEF,OAAOJ,aAAa;AACrB,CAAC;AAGD,eAAeF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}