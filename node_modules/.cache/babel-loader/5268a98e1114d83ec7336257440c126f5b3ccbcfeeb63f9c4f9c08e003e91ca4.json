{"ast":null,"code":"import{useState,useEffect}from'react';import customerServices from'../../../../services/customerServices/CustomerServices';import ServiceMethods from'../../../../utils/ServiceMethods';import*as Yup from'yup';import CustomTable from'../../../../components/custom-table/CustomTable';import CardHeader from'../../../../components/card-header/CardHeader';import CustomModalDetail from'../../../../components/custom-modal/CustomModalDetail';import CustomModalForm from'../../../../components/custom-modal/CustomModalForm';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Problem(){const[problemList,setProblemList]=useState([]);const[pageCount,setPageCount]=useState(10);const[detailData,setDetailData]=useState(null);const user=JSON.parse(localStorage.getItem('user'));const[pagination,setPagination]=useState({page:0,size:10});const paginate=_ref=>{let{selected}=_ref;setPagination({page:selected,size:10});};useEffect(()=>{getproblemList();},[pagination]);const getproblemList=async()=>{await ServiceMethods.get(customerServices.getList,pagination,data=>{setProblemList(data);setPageCount(Math.ceil(data.length/pagination.size));});};const addProblem=async values=>{await ServiceMethods.add(customerServices.addNew,values,getproblemList);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CustomModalForm,{title:'Add new customer',properties:[{field:'Name',type:'input'},{field:'Age',type:'input-number'},{field:'Email',type:'input'},{field:'Address',type:'input'}],modalID:\"problemModal\",submitFunction:values=>addProblem(values)}),/*#__PURE__*/_jsx(CardHeader,{pageCount:pageCount,paginateFunction:paginate,modalID:'#problemModal',buttonName:'Add problems'}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsx(CustomTable,{data:problemList})})]});}export default Problem;","map":{"version":3,"names":["useState","useEffect","customerServices","ServiceMethods","Yup","CustomTable","CardHeader","CustomModalDetail","CustomModalForm","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Problem","problemList","setProblemList","pageCount","setPageCount","detailData","setDetailData","user","JSON","parse","localStorage","getItem","pagination","setPagination","page","size","paginate","_ref","selected","getproblemList","get","getList","data","Math","ceil","length","addProblem","values","add","addNew","children","title","properties","field","type","modalID","submitFunction","paginateFunction","buttonName","className"],"sources":["E:/project-exam/eProject---SEM-2/src/pages/cms/customer/problems/Problem.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport customerServices from '../../../../services/customerServices/CustomerServices';\r\nimport ServiceMethods from '../../../../utils/ServiceMethods';\r\nimport * as Yup from 'yup';\r\nimport CustomTable from '../../../../components/custom-table/CustomTable';\r\nimport CardHeader from '../../../../components/card-header/CardHeader';\r\nimport CustomModalDetail from '../../../../components/custom-modal/CustomModalDetail';\r\nimport CustomModalForm from '../../../../components/custom-modal/CustomModalForm';\r\n\r\nfunction Problem() {\r\n\tconst [problemList, setProblemList] = useState([]);\r\n\tconst [pageCount, setPageCount] = useState(10);\r\n\tconst [detailData, setDetailData] = useState(null);\r\n\tconst user = JSON.parse(localStorage.getItem('user'));\r\n\tconst [pagination, setPagination] = useState({\r\n\t\tpage: 0,\r\n\t\tsize: 10,\r\n\t});\r\n\r\n\tconst paginate = ({ selected }) => {\r\n\t\tsetPagination({\r\n\t\t\tpage: selected,\r\n\t\t\tsize: 10,\r\n\t\t});\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tgetproblemList();\r\n\t}, [pagination]);\r\n\r\n\tconst getproblemList = async () => {\r\n\t\tawait ServiceMethods.get(customerServices.getList, pagination, (data) => {\r\n\t\t\tsetProblemList(data);\r\n\t\t\tsetPageCount(Math.ceil(data.length / pagination.size));\r\n\t\t});\r\n\t};\r\n\r\n\tconst addProblem = async (values) => {\r\n\t\tawait ServiceMethods.add(customerServices.addNew, values, getproblemList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CustomModalForm\r\n\t\t\t\ttitle={'Add new customer'}\r\n\t\t\t\tproperties={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfield: 'Name',\r\n\t\t\t\t\t\ttype: 'input',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfield: 'Age',\r\n\t\t\t\t\t\ttype: 'input-number',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfield: 'Email',\r\n\t\t\t\t\t\ttype: 'input',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfield: 'Address',\r\n\t\t\t\t\t\ttype: 'input',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\tmodalID=\"problemModal\"\r\n\t\t\t\tsubmitFunction={(values) => addProblem(values)}\r\n\t\t\t/>\r\n\t\t\t<CardHeader\r\n\t\t\t\tpageCount={pageCount}\r\n\t\t\t\tpaginateFunction={paginate}\r\n\t\t\t\tmodalID={'#problemModal'}\r\n\t\t\t\tbuttonName={'Add problems'}\r\n\t\t\t/>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<CustomTable data={problemList} />\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Problem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}