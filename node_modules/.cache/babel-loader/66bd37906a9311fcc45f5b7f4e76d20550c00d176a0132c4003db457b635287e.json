{"ast":null,"code":"var _jsxFileName = \"E:\\\\project-exam\\\\eProject---SEM-2\\\\src\\\\pages\\\\cms\\\\warehouse\\\\inventory\\\\Inventory.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Toast from '../../../../components/toast-message/ToastMessage';\nimport CustomTable from '../../../../components/custom-table/CustomTable';\nimport InventoryService from '../../../../services/warehouseServices/InventoryService';\nimport InventoryHistoryService from '../../../../services/warehouseServices/InventoryHistoryService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Inventory() {\n  _s();\n  const [currentInventory, setCurrentInventory] = useState([]);\n  const [pagination, setPagination] = useState({\n    page: 0,\n    size: 10\n  });\n  const getCurrentInventory = async page => {\n    try {\n      const response = await InventoryService.getList(page);\n      if (response.success) {\n        setCurrentInventory(response.data);\n      } else {\n        Toast.error(response.message);\n      }\n    } catch (error) {\n      Toast.error(error);\n    }\n  };\n  const paginate = page => {\n    setPagination({\n      page: page,\n      size: 10\n    });\n  };\n  const closeInventory = async () => {\n    const confirmClose = window.confirm('Are you sure you want to manual close the inventory?');\n    if (!confirmClose) {\n      return;\n    }\n    try {\n      const data = {\n        description: 'string',\n        isManualClosing: true\n      };\n      const response = await InventoryService.closeInventory(data);\n      if (response.success) {\n        Toast.success(response.message);\n      } else {\n        Toast.error(response.message);\n      }\n    } catch (error) {\n      Toast.error(error);\n    }\n  };\n  useEffect(() => {\n    getCurrentInventory(pagination);\n  }, [pagination]);\n  useEffect(() => {}, [currentInventory]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => closeInventory(),\n        children: \"Close Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: currentInventory && /*#__PURE__*/_jsxDEV(CustomTable, {\n        data: currentInventory,\n        endpoint: 'cms/warehouse/materials'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(Inventory, \"kxMYgubWjxGkXATX6HXxqcdwrmA=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["useEffect","useState","Toast","CustomTable","InventoryService","InventoryHistoryService","jsxDEV","_jsxDEV","Fragment","_Fragment","Inventory","_s","currentInventory","setCurrentInventory","pagination","setPagination","page","size","getCurrentInventory","response","getList","success","data","error","message","paginate","closeInventory","confirmClose","window","confirm","description","isManualClosing","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","endpoint","_c","$RefreshReg$"],"sources":["E:/project-exam/eProject---SEM-2/src/pages/cms/warehouse/inventory/Inventory.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Toast from '../../../../components/toast-message/ToastMessage';\r\nimport CustomTable from '../../../../components/custom-table/CustomTable';\r\nimport InventoryService from '../../../../services/warehouseServices/InventoryService';\r\nimport InventoryHistoryService from '../../../../services/warehouseServices/InventoryHistoryService';\r\n\r\nfunction Inventory() {\r\n\tconst [currentInventory, setCurrentInventory] = useState([]);\r\n\tconst [pagination, setPagination] = useState({\r\n\t\tpage: 0,\r\n\t\tsize: 10,\r\n\t});\r\n\r\n\tconst getCurrentInventory = async (page) => {\r\n\t\ttry {\r\n\t\t\tconst response = await InventoryService.getList(page);\r\n\t\t\tif (response.success) {\r\n\t\t\t\tsetCurrentInventory(response.data);\r\n\t\t\t} else {\r\n\t\t\t\tToast.error(response.message);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tToast.error(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst paginate = (page) => {\r\n\t\tsetPagination({\r\n\t\t\tpage: page,\r\n\t\t\tsize: 10,\r\n\t\t});\r\n\t};\r\n\r\n\tconst closeInventory = async () => {\r\n\t\tconst confirmClose = window.confirm('Are you sure you want to manual close the inventory?');\r\n\r\n\t\tif (!confirmClose) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst data = {\r\n\t\t\t\tdescription: 'string',\r\n\t\t\t\tisManualClosing: true,\r\n\t\t\t};\r\n\r\n\t\t\tconst response = await InventoryService.closeInventory(data);\r\n\t\t\tif (response.success) {\r\n\t\t\t\tToast.success(response.message);\r\n\t\t\t} else {\r\n\t\t\t\tToast.error(response.message);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tToast.error(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetCurrentInventory(pagination);\r\n\t}, [pagination]);\r\n\r\n\tuseEffect(() => {}, [currentInventory]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"card-header\">\r\n\t\t\t\t<button className=\"btn btn-primary\" onClick={() => closeInventory()}>\r\n\t\t\t\t\tClose Inventory\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t{currentInventory && (\r\n\t\t\t\t\t<CustomTable data={currentInventory} endpoint={'cms/warehouse/materials'} />\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Inventory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}