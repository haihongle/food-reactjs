{"ast":null,"code":"import moment from'moment';const findDateStrings=data=>{const dateKeys=[];for(const key in data){if(data.hasOwnProperty(key)){const value=data[key];if(typeof value==='string'){const isValidISO=moment(value,moment.ISO_8601,true).isValid();if(isValidISO){dateKeys.push(key);}}}}return dateKeys;};const handleDatetime=dataObject=>{const formattedData={...dataObject};const dateKeys=findDateStrings(dataObject);dateKeys.forEach(key=>{const dateValue=dataObject[key];const momentDate=moment(dateValue,moment.ISO_8601,true);if(momentDate.isValid()){if(momentDate.format('YYYY-MM-DD')==='0000-01-01'){formattedData[key]=momentDate.format('HH:mm');}else if(momentDate.format('HH:mm:ss')!=='00:00:00'){formattedData[key]=momentDate.format('DD/MM/YYYY - HH:mm');}else{formattedData[key]=momentDate.format('DD/MM/YYYY');}}});return formattedData;};export default handleDatetime;","map":{"version":3,"names":["moment","findDateStrings","data","dateKeys","key","hasOwnProperty","value","isValidISO","ISO_8601","isValid","push","handleDatetime","dataObject","formattedData","forEach","dateValue","momentDate","format"],"sources":["E:/project-exam/eProject---SEM-2/src/utils/HandleDatetime.js"],"sourcesContent":["import moment from 'moment';\r\n\r\nconst findDateStrings = (data) => {\r\n\tconst dateKeys = [];\r\n\tfor (const key in data) {\r\n\t\tif (data.hasOwnProperty(key)) {\r\n\t\t\tconst value = data[key];\r\n\t\t\tif (typeof value === 'string') {\r\n\t\t\t\tconst isValidISO = moment(value, moment.ISO_8601, true).isValid();\r\n\t\t\t\tif (isValidISO) {\r\n\t\t\t\t\tdateKeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn dateKeys;\r\n};\r\n\r\nconst handleDatetime = (dataObject) => {\r\n\tconst formattedData = { ...dataObject };\r\n\tconst dateKeys = findDateStrings(dataObject);\r\n\r\n\tdateKeys.forEach((key) => {\r\n\t\tconst dateValue = dataObject[key];\r\n\t\tconst momentDate = moment(dateValue, moment.ISO_8601, true);\r\n\r\n\t\tif (momentDate.isValid()) {\r\n\t\t\tif (momentDate.format('YYYY-MM-DD') === '0000-01-01') {\r\n\t\t\t\tformattedData[key] = momentDate.format('HH:mm');\r\n\t\t\t} else if (momentDate.format('HH:mm:ss') !== '00:00:00') {\r\n\t\t\t\tformattedData[key] = momentDate.format('DD/MM/YYYY - HH:mm');\r\n\t\t\t} else {\r\n\t\t\t\tformattedData[key] = momentDate.format('DD/MM/YYYY');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn formattedData;\r\n};\r\n\r\n\r\nexport default handleDatetime;\r\n"],"mappings":"AAAA,MAAO,CAAAA,MAAM,KAAM,QAAQ,CAE3B,KAAM,CAAAC,eAAe,CAAIC,IAAI,EAAK,CACjC,KAAM,CAAAC,QAAQ,CAAG,EAAE,CACnB,IAAK,KAAM,CAAAC,GAAG,GAAI,CAAAF,IAAI,CAAE,CACvB,GAAIA,IAAI,CAACG,cAAc,CAACD,GAAG,CAAC,CAAE,CAC7B,KAAM,CAAAE,KAAK,CAAGJ,IAAI,CAACE,GAAG,CAAC,CACvB,GAAI,MAAO,CAAAE,KAAK,GAAK,QAAQ,CAAE,CAC9B,KAAM,CAAAC,UAAU,CAAGP,MAAM,CAACM,KAAK,CAAEN,MAAM,CAACQ,QAAQ,CAAE,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,CACjE,GAAIF,UAAU,CAAE,CACfJ,QAAQ,CAACO,IAAI,CAACN,GAAG,CAAC,CACnB,CACD,CACD,CACD,CACA,MAAO,CAAAD,QAAQ,CAChB,CAAC,CAED,KAAM,CAAAQ,cAAc,CAAIC,UAAU,EAAK,CACtC,KAAM,CAAAC,aAAa,CAAG,CAAE,GAAGD,UAAW,CAAC,CACvC,KAAM,CAAAT,QAAQ,CAAGF,eAAe,CAACW,UAAU,CAAC,CAE5CT,QAAQ,CAACW,OAAO,CAAEV,GAAG,EAAK,CACzB,KAAM,CAAAW,SAAS,CAAGH,UAAU,CAACR,GAAG,CAAC,CACjC,KAAM,CAAAY,UAAU,CAAGhB,MAAM,CAACe,SAAS,CAAEf,MAAM,CAACQ,QAAQ,CAAE,IAAI,CAAC,CAE3D,GAAIQ,UAAU,CAACP,OAAO,CAAC,CAAC,CAAE,CACzB,GAAIO,UAAU,CAACC,MAAM,CAAC,YAAY,CAAC,GAAK,YAAY,CAAE,CACrDJ,aAAa,CAACT,GAAG,CAAC,CAAGY,UAAU,CAACC,MAAM,CAAC,OAAO,CAAC,CAChD,CAAC,IAAM,IAAID,UAAU,CAACC,MAAM,CAAC,UAAU,CAAC,GAAK,UAAU,CAAE,CACxDJ,aAAa,CAACT,GAAG,CAAC,CAAGY,UAAU,CAACC,MAAM,CAAC,oBAAoB,CAAC,CAC7D,CAAC,IAAM,CACNJ,aAAa,CAACT,GAAG,CAAC,CAAGY,UAAU,CAACC,MAAM,CAAC,YAAY,CAAC,CACrD,CACD,CACD,CAAC,CAAC,CAEF,MAAO,CAAAJ,aAAa,CACrB,CAAC,CAGD,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}