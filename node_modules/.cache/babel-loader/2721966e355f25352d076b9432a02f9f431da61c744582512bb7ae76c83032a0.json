{"ast":null,"code":"var _jsxFileName = \"E:\\\\project-exam\\\\eProject---SEM-2\\\\src\\\\pages\\\\cms\\\\warehouse\\\\materials\\\\Material.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport MaterialService from '../../../../services/warehouseServices/MaterialService';\nimport ServiceMethods from '../../../../utils/ServiceMethods';\nimport * as Yup from 'yup';\nimport CustomTable from '../../../../components/custom-table/CustomTable';\nimport CardHeader from '../../../../components/card-header/CardHeader';\nimport CustomModalDetail from '../../../../components/custom-modal/CustomModalDetail';\nimport CustomModalForm from '../../../../components/custom-modal/CustomModalForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Material() {\n  _s();\n  const [dataMaterials, setDataMaterials] = useState([]);\n  const [pageCount, setPageCount] = useState(null);\n  const [detailData, setDetailData] = useState(null);\n  const user = JSON.parse(localStorage.getItem('user'));\n  const [pagination, setPagination] = useState({\n    page: 0,\n    size: 10\n  });\n  const paginate = ({\n    selected\n  }) => {\n    setPagination({\n      page: selected,\n      size: 10\n    });\n  };\n  useEffect(() => {\n    getMaterials();\n  }, [pagination]);\n  const getMaterials = async phantrang => {\n    await ServiceMethods.get(MaterialService.getMaterials, pagination, data => {\n      setDataMaterials(data);\n      setPageCount(Math.ceil(data.length / pagination.size));\n    });\n  };\n  const addMaterials = async values => {\n    await ServiceMethods.add(MaterialService.addMaterials, values, getMaterials);\n  };\n  const detailMaterial = async id => {\n    const data = await ServiceMethods.detail(MaterialService.detailMaterial, id);\n    setDetailData(data);\n  };\n  const updateMaterial = async updatedData => {\n    const {\n      id,\n      name,\n      code,\n      shelfLife,\n      unitType,\n      description\n    } = updatedData;\n    const requestUpdatedData = {\n      name: name,\n      code: code,\n      shelfLife: shelfLife,\n      unitType: unitType,\n      description: description\n    };\n    await ServiceMethods.update(MaterialService.updateMaterials, id, requestUpdatedData, getMaterials);\n  };\n  const deleteMaterial = async id => {\n    await ServiceMethods.detail(MaterialService.deleteMaterials, id, getMaterials);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CustomModalForm, {\n      title: 'Add new material',\n      modalID: \"addMaterialModal\",\n      properties: [{\n        label: 'Name',\n        field: 'name',\n        type: 'text',\n        validation: Yup.string().required('Name is required'),\n        className: 'col-md-6'\n      }, {\n        label: 'Code',\n        field: 'code',\n        type: 'text',\n        validation: Yup.string().required('Code is required'),\n        className: 'col-md-6'\n      }, {\n        label: 'ShelfLife',\n        field: 'shelfLife',\n        type: 'number',\n        validation: Yup.number().required('Shelf Life is required').min(0, 'Shelf Life must be a positive number'),\n        className: 'col-md-6'\n      }, {\n        label: 'Unit type',\n        field: 'unitType',\n        type: 'select',\n        options: [{\n          label: 'Piece',\n          value: 'PIECE'\n        }, {\n          label: 'Kilogram',\n          value: 'KILOGRAM'\n        }, {\n          label: 'Gram',\n          value: 'GRAM'\n        }, {\n          label: 'Pair',\n          value: 'PAIR'\n        }],\n        validation: Yup.string().required('Unit Type is required'),\n        className: 'col-md-6'\n      }, {\n        label: 'Description',\n        field: 'description',\n        type: 'text-area',\n        className: 'col-md-12'\n      }],\n      submitFunction: values => addMaterials(values)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CustomModalDetail, {\n      detailData: detailData,\n      actions: {\n        update: updateMaterial\n      },\n      hiddenFields: ['id']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n      pageCount: pageCount,\n      paginateFunction: paginate,\n      modalID: '#addMaterialModal',\n      buttonName: 'Add material'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(CustomTable, {\n        data: dataMaterials,\n        actions: {\n          detail: detailMaterial,\n          update: updateMaterial,\n          delete: deleteMaterial\n        },\n        hiddenFields: ['id', 'createdBy', 'updatedBy', 'updatedAt']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(Material, \"Jb6NOlEQc0Efgmg6HFeLBlknkBs=\");\n_c = Material;\nexport default Material;\nvar _c;\n$RefreshReg$(_c, \"Material\");","map":{"version":3,"names":["useState","useEffect","MaterialService","ServiceMethods","Yup","CustomTable","CardHeader","CustomModalDetail","CustomModalForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Material","_s","dataMaterials","setDataMaterials","pageCount","setPageCount","detailData","setDetailData","user","JSON","parse","localStorage","getItem","pagination","setPagination","page","size","paginate","selected","getMaterials","phantrang","get","data","Math","ceil","length","addMaterials","values","add","detailMaterial","id","detail","updateMaterial","updatedData","name","code","shelfLife","unitType","description","requestUpdatedData","update","updateMaterials","deleteMaterial","deleteMaterials","children","title","modalID","properties","label","field","type","validation","string","required","className","number","min","options","value","submitFunction","fileName","_jsxFileName","lineNumber","columnNumber","actions","hiddenFields","paginateFunction","buttonName","delete","_c","$RefreshReg$"],"sources":["E:/project-exam/eProject---SEM-2/src/pages/cms/warehouse/materials/Material.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport MaterialService from '../../../../services/warehouseServices/MaterialService';\r\nimport ServiceMethods from '../../../../utils/ServiceMethods';\r\nimport * as Yup from 'yup';\r\nimport CustomTable from '../../../../components/custom-table/CustomTable';\r\nimport CardHeader from '../../../../components/card-header/CardHeader';\r\nimport CustomModalDetail from '../../../../components/custom-modal/CustomModalDetail';\r\nimport CustomModalForm from '../../../../components/custom-modal/CustomModalForm';\r\n\r\nfunction Material() {\r\n\tconst [dataMaterials, setDataMaterials] = useState([]);\r\n\tconst [pageCount, setPageCount] = useState(null);\r\n\tconst [detailData, setDetailData] = useState(null);\r\n\tconst user = JSON.parse(localStorage.getItem('user'));\r\n\tconst [pagination, setPagination] = useState({\r\n\t\tpage: 0,\r\n\t\tsize: 10,\r\n\t});\r\n\r\n\tconst paginate = ({ selected }) => {\r\n\t\tsetPagination({\r\n\t\t\tpage: selected,\r\n\t\t\tsize: 10,\r\n\t\t});\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tgetMaterials();\r\n\t}, [pagination]);\r\n\r\n\tconst getMaterials = async (phantrang) => {\r\n\t\tawait ServiceMethods.get(MaterialService.getMaterials, pagination, (data) => {\r\n\t\t\tsetDataMaterials(data);\r\n\t\t\tsetPageCount(Math.ceil(data.length / pagination.size));\r\n\t\t});\r\n\t};\r\n\r\n\tconst addMaterials = async (values) => {\r\n\t\tawait ServiceMethods.add(MaterialService.addMaterials, values, getMaterials);\r\n\t};\r\n\r\n\tconst detailMaterial = async (id) => {\r\n\t\tconst data = await ServiceMethods.detail(MaterialService.detailMaterial, id);\r\n\t\tsetDetailData(data);\r\n\t};\r\n\r\n\tconst updateMaterial = async (updatedData) => {\r\n\t\tconst { id, name, code, shelfLife, unitType, description } = updatedData;\r\n\t\tconst requestUpdatedData = {\r\n\t\t\tname: name,\r\n\t\t\tcode: code,\r\n\t\t\tshelfLife: shelfLife,\r\n\t\t\tunitType: unitType,\r\n\t\t\tdescription: description,\r\n\t\t};\r\n\t\tawait ServiceMethods.update(\r\n\t\t\tMaterialService.updateMaterials,\r\n\t\t\tid,\r\n\t\t\trequestUpdatedData,\r\n\t\t\tgetMaterials\r\n\t\t);\r\n\t};\r\n\r\n\tconst deleteMaterial = async (id) => {\r\n\t\tawait ServiceMethods.detail(MaterialService.deleteMaterials, id, getMaterials);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CustomModalForm\r\n\t\t\t\ttitle={'Add new material'}\r\n\t\t\t\tmodalID=\"addMaterialModal\"\r\n\t\t\t\tproperties={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Name',\r\n\t\t\t\t\t\tfield: 'name',\r\n\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\tvalidation: Yup.string().required('Name is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Code',\r\n\t\t\t\t\t\tfield: 'code',\r\n\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\tvalidation: Yup.string().required('Code is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'ShelfLife',\r\n\t\t\t\t\t\tfield: 'shelfLife',\r\n\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\tvalidation: Yup.number()\r\n\t\t\t\t\t\t\t.required('Shelf Life is required')\r\n\t\t\t\t\t\t\t.min(0, 'Shelf Life must be a positive number'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Unit type',\r\n\t\t\t\t\t\tfield: 'unitType',\r\n\t\t\t\t\t\ttype: 'select',\r\n\t\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: 'Piece',\r\n\t\t\t\t\t\t\t\tvalue: 'PIECE',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: 'Kilogram',\r\n\t\t\t\t\t\t\t\tvalue: 'KILOGRAM',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: 'Gram',\r\n\t\t\t\t\t\t\t\tvalue: 'GRAM',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: 'Pair',\r\n\t\t\t\t\t\t\t\tvalue: 'PAIR',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tvalidation: Yup.string().required('Unit Type is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Description',\r\n\t\t\t\t\t\tfield: 'description',\r\n\t\t\t\t\t\ttype: 'text-area',\r\n\t\t\t\t\t\tclassName: 'col-md-12',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\tsubmitFunction={(values) => addMaterials(values)}\r\n\t\t\t/>\r\n\t\t\t<CustomModalDetail\r\n\t\t\t\tdetailData={detailData}\r\n\t\t\t\tactions={{ update: updateMaterial }}\r\n\t\t\t\thiddenFields={['id']}\r\n\t\t\t/>\r\n\t\t\t<CardHeader\r\n\t\t\t\tpageCount={pageCount}\r\n\t\t\t\tpaginateFunction={paginate}\r\n\t\t\t\tmodalID={'#addMaterialModal'}\r\n\t\t\t\tbuttonName={'Add material'}\r\n\t\t\t/>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<CustomTable\r\n\t\t\t\t\tdata={dataMaterials}\r\n\t\t\t\t\tactions={{\r\n\t\t\t\t\t\tdetail: detailMaterial,\r\n\t\t\t\t\t\tupdate: updateMaterial,\r\n\t\t\t\t\t\tdelete: deleteMaterial,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\thiddenFields={['id', 'createdBy', 'updatedBy', 'updatedAt']}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Material;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}