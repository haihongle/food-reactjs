{"ast":null,"code":"import{useState,useEffect}from'react';import*as Yup from'yup';import ServiceMethods from'../../../../utils/ServiceMethods';import customerServices from'../../../../services/customerServices/CustomerServices';import CustomTable from'../../../../components/custom-table/CustomTable';import CardHeader from'../../../../components/card-header/CardHeader';import CustomModalDetail from'../../../../components/custom-modal/CustomModalDetail';import CustomModalForm from'../../../../components/custom-modal/CustomModalForm';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function CustomerList(){const[customerList,setCustomerList]=useState([]);const[pageCount,setPageCount]=useState(0);const[detailData,setDetailData]=useState(null);const user=JSON.parse(localStorage.getItem('user'));const[pagination,setPagination]=useState({page:0,size:10});const paginate=_ref=>{let{selected}=_ref;setPagination({page:selected,size:10});};useEffect(()=>{getCustomerList();},[pagination]);const getCustomerList=async()=>{await ServiceMethods.get(customerServices.getList,pagination,data=>{setCustomerList(data);setPageCount(Math.ceil(data.length/pagination.size));});};const addCustomer=async values=>{await ServiceMethods.add(customerServices.addNew,values,getCustomerList);};const detailCustomer=async id=>{const data=await ServiceMethods.detail(customerServices.getDetail,id);setDetailData(data);};const updateCustomer=async(oldData,updatedData)=>{const onSuccess=async menuId=>{await detailCustomer(menuId);await getCustomerList();};updatedData.updatedBy=(user===null||user===void 0?void 0:user.username)||null;await ServiceMethods.update(customerServices.updateCustomer,oldData.customerId,updatedData,onSuccess);};const deleteCustomer=async id=>{await ServiceMethods.add(customerServices.deleteCustomer,id,getCustomerList);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CustomModalForm,{title:'Add new customer',properties:[{label:'Full name',field:'fullname',type:'text',validation:Yup.string().required('Username is required'),className:'col-md-6'},{label:'Email',field:'email',type:'text',validation:Yup.string().email('Invalid email format').required('Email is required'),className:'col-md-6'},{label:'Phone number',field:'phonenumber',type:'number',validation:Yup.string().matches(/^(?:\\d{10}|\\d{11})$/,'Phone number must be 10 or 11 digits').required('Phone number is required'),className:'col-md-6'},{label:'Age',field:'age',type:'number',validation:Yup.number().positive('Age must be positive').required('Age is required'),className:'col-md-6'}],modalID:\"customerModal\",submitFunction:values=>addCustomer(values)}),/*#__PURE__*/_jsx(CustomModalDetail,{detailData:detailData,actions:{update:updateCustomer}}),/*#__PURE__*/_jsx(CardHeader,{pageCount:pageCount,paginateFunction:paginate,modalID:'#customerModal',buttonName:'Add new customer'}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsx(CustomTable,{data:customerList})})]});}export default CustomerList;","map":{"version":3,"names":["useState","useEffect","Yup","ServiceMethods","customerServices","CustomTable","CardHeader","CustomModalDetail","CustomModalForm","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","CustomerList","customerList","setCustomerList","pageCount","setPageCount","detailData","setDetailData","user","JSON","parse","localStorage","getItem","pagination","setPagination","page","size","paginate","_ref","selected","getCustomerList","get","getList","data","Math","ceil","length","addCustomer","values","add","addNew","detailCustomer","id","detail","getDetail","updateCustomer","oldData","updatedData","onSuccess","menuId","updatedBy","username","update","customerId","deleteCustomer","children","title","properties","label","field","type","validation","string","required","className","email","matches","number","positive","modalID","submitFunction","actions","paginateFunction","buttonName"],"sources":["E:/project-exam/eProject---SEM-2/src/pages/cms/customer/customer-list/CustomerList.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport ServiceMethods from '../../../../utils/ServiceMethods';\r\nimport customerServices from '../../../../services/customerServices/CustomerServices';\r\nimport CustomTable from '../../../../components/custom-table/CustomTable';\r\nimport CardHeader from '../../../../components/card-header/CardHeader';\r\nimport CustomModalDetail from '../../../../components/custom-modal/CustomModalDetail';\r\nimport CustomModalForm from '../../../../components/custom-modal/CustomModalForm';\r\n\r\nfunction CustomerList() {\r\n\tconst [customerList, setCustomerList] = useState([]);\r\n\tconst [pageCount, setPageCount] = useState(0);\r\n\tconst [detailData, setDetailData] = useState(null);\r\n\tconst user = JSON.parse(localStorage.getItem('user'));\r\n\tconst [pagination, setPagination] = useState({\r\n\t\tpage: 0,\r\n\t\tsize: 10,\r\n\t});\r\n\r\n\tconst paginate = ({ selected }) => {\r\n\t\tsetPagination({\r\n\t\t\tpage: selected,\r\n\t\t\tsize: 10,\r\n\t\t});\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tgetCustomerList();\r\n\t}, [pagination]);\r\n\r\n\tconst getCustomerList = async () => {\r\n\t\tawait ServiceMethods.get(customerServices.getList, pagination, (data) => {\r\n\t\t\tsetCustomerList(data);\r\n\t\t\tsetPageCount(Math.ceil(data.length / pagination.size));\r\n\t\t});\r\n\t};\r\n\r\n\tconst addCustomer = async (values) => {\r\n\t\tawait ServiceMethods.add(customerServices.addNew, values, getCustomerList);\r\n\t};\r\n\r\n\tconst detailCustomer = async (id) => {\r\n\t\tconst data = await ServiceMethods.detail(customerServices.getDetail, id);\r\n\t\tsetDetailData(data);\r\n\t};\r\n\r\n\tconst updateCustomer = async (oldData, updatedData) => {\r\n\t\tconst onSuccess = async (menuId) => {\r\n\t\t\tawait detailCustomer(menuId);\r\n\t\t\tawait getCustomerList();\r\n\t\t};\r\n\t\tupdatedData.updatedBy = user?.username || null;\r\n\t\tawait ServiceMethods.update(\r\n\t\t\tcustomerServices.updateCustomer,\r\n\t\t\toldData.customerId,\r\n\t\t\tupdatedData,\r\n\t\t\tonSuccess\r\n\t\t);\r\n\t};\r\n\r\n\tconst deleteCustomer = async (id) => {\r\n\t\tawait ServiceMethods.add(customerServices.deleteCustomer, id, getCustomerList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CustomModalForm\r\n\t\t\t\ttitle={'Add new customer'}\r\n\t\t\t\tproperties={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Full name',\r\n\t\t\t\t\t\tfield: 'fullname',\r\n\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\tvalidation: Yup.string().required('Username is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Email',\r\n\t\t\t\t\t\tfield: 'email',\r\n\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\tvalidation: Yup.string().email('Invalid email format').required('Email is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Phone number',\r\n\t\t\t\t\t\tfield: 'phonenumber',\r\n\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\tvalidation: Yup.string()\r\n\t\t\t\t\t\t\t.matches(/^(?:\\d{10}|\\d{11})$/, 'Phone number must be 10 or 11 digits')\r\n\t\t\t\t\t\t\t.required('Phone number is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Age',\r\n\t\t\t\t\t\tfield: 'age',\r\n\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\tvalidation: Yup.number().positive('Age must be positive').required('Age is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\tmodalID=\"customerModal\"\r\n\t\t\t\tsubmitFunction={(values) => addCustomer(values)}\r\n\t\t\t/>\r\n\t\t\t<CustomModalDetail detailData={detailData} actions={{ update: updateCustomer }} />\r\n\t\t\t<CardHeader\r\n\t\t\t\tpageCount={pageCount}\r\n\t\t\t\tpaginateFunction={paginate}\r\n\t\t\t\tmodalID={'#customerModal'}\r\n\t\t\t\tbuttonName={'Add new customer'}\r\n\t\t\t/>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<CustomTable data={customerList} />\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default CustomerList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}