{"version":3,"file":"static/js/776.f71ec375.chunk.js","mappings":"sOAoHA,QA3GA,WACC,MAAOA,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,IACpCG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,MACvCK,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UACtCC,EAAYC,IAAiBX,EAAAA,EAAAA,UAAS,CAC5CY,KAAM,EACNC,KAAM,MASPC,EAAAA,EAAAA,YAAU,KACTC,GAAiB,GACf,CAACL,IAEJ,MAAMK,EAAkBC,gBACjBC,EAAAA,EAAeC,IAAIC,EAAAA,EAAiBC,QAASV,GAAaW,IAC/DtB,EAAgBsB,GAChBnB,EAAaoB,KAAKC,KAAKF,EAAKG,OAASd,EAAWG,MAAM,GACrD,EA8BH,OACCY,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACCC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CACfC,MAAO,mBACPC,WAAY,CACX,CACCC,MAAO,YACPC,MAAO,WACPC,KAAM,OACNC,WAAYC,EAAAA,KAAaC,SAAS,wBAClCC,UAAW,YAEZ,CACCN,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,WAAYC,EAAAA,KAAaG,MAAM,wBAAwBF,SAAS,qBAChEC,UAAW,YAEZ,CACCN,MAAO,eACPC,MAAO,cACPC,KAAM,SACNC,WAAYC,EAAAA,KACVI,QAAQ,sBAAuB,wCAC/BH,SAAS,4BACXC,UAAW,YAEZ,CACCN,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,WAAYC,EAAAA,KAAaK,SAAS,wBAAwBJ,SAAS,mBACnEC,UAAW,aAGbI,QAAQ,gBACRC,eAAiBC,GAhEA5B,iBACbC,EAAAA,EAAe4B,IAAI1B,EAAAA,EAAiB2B,OAAQF,EAAQ7B,EAAgB,EA+D5CgC,CAAYH,MAEzChB,EAAAA,EAAAA,KAACoB,EAAAA,EAAiB,CAAC7C,WAAYA,EAAY8C,QAAS,CAAEC,OAzDjClC,MAAOmC,EAASC,KAKtCA,EAAYC,WAAgB,OAAJhD,QAAI,IAAJA,OAAI,EAAJA,EAAMiD,WAAY,WACpCrC,EAAAA,EAAeiC,OACpB/B,EAAAA,EAAiBoC,eACjBJ,EAAQK,WACRJ,GARiBpC,eANIA,WACtB,MAAMK,QAAaJ,EAAAA,EAAewC,OAAOtC,EAAAA,EAAiBuC,UAAWC,GACrEvD,EAAciB,EAAK,EAKZuC,CAAeC,SACf9C,GAAiB,GAQvB,MA+CAa,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CACV7D,UAAWA,EACX8D,iBAtFcC,IAAmB,IAAlB,SAAEC,GAAUD,EAC7BrD,EAAc,CACbC,KAAMqD,EACNpD,KAAM,IACL,EAmFA6B,QAAS,iBACTwB,WAAY,sBAEbtC,EAAAA,EAAAA,KAAA,OAAKU,UAAU,YAAWX,UACzBC,EAAAA,EAAAA,KAACuC,EAAAA,EAAW,CAAC9C,KAAMvB,QAIvB,C","sources":["pages/cms/customer/customer-list/CustomerList.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport ServiceMethods from '../../../../utils/ServiceMethods';\r\nimport customerServices from '../../../../services/customerServices/CustomerServices';\r\nimport CustomTable from '../../../../components/custom-table/CustomTable';\r\nimport CardHeader from '../../../../components/card-header/CardHeader';\r\nimport CustomModalDetail from '../../../../components/custom-modal/CustomModalDetail';\r\nimport CustomModalForm from '../../../../components/custom-modal/CustomModalForm';\r\n\r\nfunction CustomerList() {\r\n\tconst [customerList, setCustomerList] = useState([]);\r\n\tconst [pageCount, setPageCount] = useState(0);\r\n\tconst [detailData, setDetailData] = useState(null);\r\n\tconst user = JSON.parse(localStorage.getItem('user'));\r\n\tconst [pagination, setPagination] = useState({\r\n\t\tpage: 0,\r\n\t\tsize: 10,\r\n\t});\r\n\r\n\tconst paginate = ({ selected }) => {\r\n\t\tsetPagination({\r\n\t\t\tpage: selected,\r\n\t\t\tsize: 10,\r\n\t\t});\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tgetCustomerList();\r\n\t}, [pagination]);\r\n\r\n\tconst getCustomerList = async () => {\r\n\t\tawait ServiceMethods.get(customerServices.getList, pagination, (data) => {\r\n\t\t\tsetCustomerList(data);\r\n\t\t\tsetPageCount(Math.ceil(data.length / pagination.size));\r\n\t\t});\r\n\t};\r\n\r\n\tconst addCustomer = async (values) => {\r\n\t\tawait ServiceMethods.add(customerServices.addNew, values, getCustomerList);\r\n\t};\r\n\r\n\tconst detailCustomer = async (id) => {\r\n\t\tconst data = await ServiceMethods.detail(customerServices.getDetail, id);\r\n\t\tsetDetailData(data);\r\n\t};\r\n\r\n\tconst updateCustomer = async (oldData, updatedData) => {\r\n\t\tconst onSuccess = async (menuId) => {\r\n\t\t\tawait detailCustomer(menuId);\r\n\t\t\tawait getCustomerList();\r\n\t\t};\r\n\t\tupdatedData.updatedBy = user?.username || null;\r\n\t\tawait ServiceMethods.update(\r\n\t\t\tcustomerServices.updateCustomer,\r\n\t\t\toldData.customerId,\r\n\t\t\tupdatedData,\r\n\t\t\tonSuccess\r\n\t\t);\r\n\t};\r\n\r\n\tconst deleteCustomer = async (id) => {\r\n\t\tawait ServiceMethods.add(customerServices.deleteCustomer, id, getCustomerList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CustomModalForm\r\n\t\t\t\ttitle={'Add new customer'}\r\n\t\t\t\tproperties={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Full name',\r\n\t\t\t\t\t\tfield: 'fullname',\r\n\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\tvalidation: Yup.string().required('Username is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Email',\r\n\t\t\t\t\t\tfield: 'email',\r\n\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\tvalidation: Yup.string().email('Invalid email format').required('Email is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Phone number',\r\n\t\t\t\t\t\tfield: 'phonenumber',\r\n\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\tvalidation: Yup.string()\r\n\t\t\t\t\t\t\t.matches(/^(?:\\d{10}|\\d{11})$/, 'Phone number must be 10 or 11 digits')\r\n\t\t\t\t\t\t\t.required('Phone number is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Age',\r\n\t\t\t\t\t\tfield: 'age',\r\n\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\tvalidation: Yup.number().positive('Age must be positive').required('Age is required'),\r\n\t\t\t\t\t\tclassName: 'col-md-6',\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\tmodalID=\"customerModal\"\r\n\t\t\t\tsubmitFunction={(values) => addCustomer(values)}\r\n\t\t\t/>\r\n\t\t\t<CustomModalDetail detailData={detailData} actions={{ update: updateCustomer }} />\r\n\t\t\t<CardHeader\r\n\t\t\t\tpageCount={pageCount}\r\n\t\t\t\tpaginateFunction={paginate}\r\n\t\t\t\tmodalID={'#customerModal'}\r\n\t\t\t\tbuttonName={'Add new customer'}\r\n\t\t\t/>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<CustomTable data={customerList} />\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default CustomerList;\r\n"],"names":["customerList","setCustomerList","useState","pageCount","setPageCount","detailData","setDetailData","user","JSON","parse","localStorage","getItem","pagination","setPagination","page","size","useEffect","getCustomerList","async","ServiceMethods","get","customerServices","getList","data","Math","ceil","length","_jsxs","_Fragment","children","_jsx","CustomModalForm","title","properties","label","field","type","validation","Yup","required","className","email","matches","positive","modalID","submitFunction","values","add","addNew","addCustomer","CustomModalDetail","actions","update","oldData","updatedData","updatedBy","username","updateCustomer","customerId","detail","getDetail","id","detailCustomer","menuId","CardHeader","paginateFunction","_ref","selected","buttonName","CustomTable"],"sourceRoot":""}